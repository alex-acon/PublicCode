# Prompt for credentials for the untrusted domain
$domain = "untrustedDomain.com" # Replace with the actual domain
$creds = Get-Credential -Message "Enter your credentials for $domain"

# Define the path to the Active Directory
$ldapPath = "LDAP://$domain"

# Create a directory entry with the provided credentials
$directoryEntry = New-Object System.DirectoryServices.DirectoryEntry($ldapPath, $creds.UserName, $creds.GetNetworkCredential().Password)

# Create a directory searcher
$searcher = New-Object System.DirectoryServices.DirectorySearcher($directoryEntry)

# Set the filter to search for a specific user (modify as needed)
$searcher.Filter = "(&(objectClass=user)(sAMAccountName=username))" # Replace 'username' with the actual username

# Optionally, specify the properties you want to retrieve
$searcher.PropertiesToLoad.Add("displayName")
$searcher.PropertiesToLoad.Add("email")
$searcher.PropertiesToLoad.Add("title")

# Perform the search
$result = $searcher.FindOne()

# Check if the user was found
if ($result -ne $null) {
    # Output user properties
    $properties = $result.Properties
    Write-Output "Display Name: $($properties.displayName)"
    Write-Output "Email: $($properties.email)"
    Write-Output "Title: $($properties.title)"
} else {
    Write-Output "User not found."
}
